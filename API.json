{
	"info": {
		"_postman_id": "9106fa1a-ce0a-49b8-a813-ff6a95349b60",
		"name": "wordpress_API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "WordpressPost",
			"item": [
				{
					"name": "fetchAllPost",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/posts",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckcaseSensitivity",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/POSTS",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"POSTS"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckNonexistingPost",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HostName}}/ABC",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"ABC"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckstatusofPost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HostName}}/13",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"13"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckSuccessfulPost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HostName}}/13",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"13"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckResponseTime",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Post is Successful\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HostName}}/13",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"13"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check_Status_code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Post is Successful\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HostName}}/13",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"13"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Positive validation of id\r",
									"pm.test(\"Id is matched\",function(){\r",
									"    var jsonrep=pm.response.json();\r",
									"    pm.expect(jsonrep.id).to.eql(13);\r",
									"});\r",
									"//Negetive validation of id\r",
									"\r",
									"var Ajv=require('ajv'),\r",
									"    ajv=new Ajv({logger:console});\r",
									"\r",
									"\r",
									"pm.test(\"Id is not matched\",function(){\r",
									"    var jsonrep=pm.response.json();\r",
									"    pm.expect(jsonrep.id).to.eql(12);\r",
									"});\r",
									"\r",
									"var Ajv=require('ajv'),\r",
									"    ajv=new Ajv({logger:console});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/posts/13",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"posts",
								"13"
							]
						}
					},
					"response": []
				},
				{
					"name": "Print_post_id_inConsole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Print the value of id in the console\r",
									"pm.test(\"Post id is prined in console\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(+jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/posts/13",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"posts",
								"13"
							]
						}
					},
					"response": []
				},
				{
					"name": "Correlation_of_post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=pm.response.json();\r",
									"pm.test(\"check for id\",function(){\r",
									"    var jsonData=pm.response.json();//deserialisation or parsing\r",
									"    console.log(+jsonData.id);\r",
									"\r",
									"pm.globals.set(\"globalId\",jsonData.id);\r",
									"console.log(pm.globals.get(\"globalId\"));\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/posts/13",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"posts",
								"13"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate_String_in_body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Positive validation\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Postman\");\r",
									"});\r",
									"//Negetive Validation\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"SystemProp\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/posts/13",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"posts",
								"13"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreatePost",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "My Mini Project",
									"type": "text"
								},
								{
									"key": "content",
									"value": "This is the wordpress document",
									"type": "text"
								},
								{
									"key": "status",
									"value": "publish",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/posts",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "ReadsinglePost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/posts/13",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"posts",
								"13"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdatePost",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "My Mini Project updated",
									"type": "text"
								},
								{
									"key": "content",
									"value": "This is the wordpress document updated",
									"type": "text"
								},
								{
									"key": "status",
									"value": "publish",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/posts/26",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"posts",
								"26"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeletePost",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "My Mini Project updated",
									"type": "text",
									"disabled": true
								},
								{
									"key": "content",
									"value": "This is the wordpress document updated",
									"type": "text",
									"disabled": true
								},
								{
									"key": "status",
									"value": "publish",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/posts/25",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"posts",
								"25"
							]
						}
					},
					"response": []
				},
				{
					"name": "SchemaValidationofPost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"id\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"date\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"date_gmt\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"guid\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"rendered\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"rendered\"\r",
									"      ]\r",
									"    },\r",
									"    \"modified\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"modified_gmt\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"slug\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"status\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"type\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"link\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"title\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"rendered\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"rendered\"\r",
									"      ]\r",
									"    },\r",
									"    \"content\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"rendered\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"protected\": {\r",
									"          \"type\": \"boolean\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"rendered\",\r",
									"        \"protected\"\r",
									"      ]\r",
									"    },\r",
									"    \"excerpt\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"rendered\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"protected\": {\r",
									"          \"type\": \"boolean\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"rendered\",\r",
									"        \"protected\"\r",
									"      ]\r",
									"    },\r",
									"    \"author\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"featured_media\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"comment_status\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"ping_status\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"sticky\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"template\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"format\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"meta\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": {}\r",
									"    },\r",
									"    \"categories\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"tags\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": {}\r",
									"    },\r",
									"    \"_links\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"self\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"collection\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"about\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"author\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"embeddable\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"embeddable\",\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"replies\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"embeddable\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"embeddable\",\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"version-history\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"count\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"count\",\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"predecessor-version\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"id\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"id\",\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"wp:attachment\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"wp:term\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"taxonomy\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"embeddable\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"taxonomy\",\r",
									"                \"embeddable\",\r",
									"                \"href\"\r",
									"              ]\r",
									"            },\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"taxonomy\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"embeddable\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"taxonomy\",\r",
									"                \"embeddable\",\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"curies\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"name\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"templated\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"name\",\r",
									"                \"href\",\r",
									"                \"templated\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"self\",\r",
									"        \"collection\",\r",
									"        \"about\",\r",
									"        \"author\",\r",
									"        \"replies\",\r",
									"        \"version-history\",\r",
									"        \"predecessor-version\",\r",
									"        \"wp:attachment\",\r",
									"        \"wp:term\",\r",
									"        \"curies\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"id\",\r",
									"    \"date\",\r",
									"    \"date_gmt\",\r",
									"    \"guid\",\r",
									"    \"modified\",\r",
									"    \"modified_gmt\",\r",
									"    \"slug\",\r",
									"    \"status\",\r",
									"    \"type\",\r",
									"    \"link\",\r",
									"    \"title\",\r",
									"    \"content\",\r",
									"    \"excerpt\",\r",
									"    \"author\",\r",
									"    \"featured_media\",\r",
									"    \"comment_status\",\r",
									"    \"ping_status\",\r",
									"    \"sticky\",\r",
									"    \"template\",\r",
									"    \"format\",\r",
									"    \"meta\",\r",
									"    \"categories\",\r",
									"    \"tags\",\r",
									"    \"_links\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"var jsonrep = pm.response.json();\r",
									"\r",
									"pm.test(' Validate Schema of Post in Wordpress ', function () {\r",
									"    pm.expect(tv4.validate(jsonrep, schema)).to.be.true;\r",
									"    \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HostName}}/13",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"13"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Wordpress_category",
			"item": [
				{
					"name": "fetch_all_categories",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "fetch_single_category",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "fetch a category Using Environment variables",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check_nonExisting_category",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/categories/ABC",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"categories",
								"ABC"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create_category",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "REST API",
									"type": "text"
								},
								{
									"key": "slug",
									"value": "API related Documents",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_category",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "REST API",
									"type": "text"
								},
								{
									"key": "slug",
									"value": "API related Documents",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate_id_of_Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Positive validation of id\r",
									"pm.test(\"Id is matched\",function(){\r",
									"    var jsonrep=pm.response.json();\r",
									"    pm.expect(jsonrep.id).to.eql(3);\r",
									"});\r",
									"\r",
									"var Ajv=require('ajv'),\r",
									"    ajv=new Ajv({logger:console});\r",
									"\r",
									"//Negetive validation of id\r",
									"pm.test(\"Id is not matched\",function(){\r",
									"    var jsonrep=pm.response.json();\r",
									"    pm.expect(jsonrep.id).to.eql(56);\r",
									"});\r",
									"\r",
									"var Ajv=require('ajv'),\r",
									"    ajv=new Ajv({logger:console});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "REST API",
									"type": "text"
								},
								{
									"key": "slug",
									"value": "API related Documents",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/categories/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"categories",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Correlation_category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=pm.response.json();\r",
									"pm.test(\"check for id\",function(){\r",
									"    var jsonData=pm.response.json();//deserialisation or parsing\r",
									"    console.log(+jsonData.id);\r",
									"\r",
									"pm.globals.set(\"globalid\",jsonData.id);\r",
									"console.log(pm.globals.get(\"globalid\"));\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "REST API",
									"type": "text"
								},
								{
									"key": "slug",
									"value": "API related Documents",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/categories/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"categories",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Schema validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"id\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"count\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"description\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"link\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"name\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"slug\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"taxonomy\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"parent\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"meta\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": {}\r",
									"    },\r",
									"    \"_links\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"self\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"collection\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"about\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"wp:post_type\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"curies\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"name\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"templated\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"name\",\r",
									"                \"href\",\r",
									"                \"templated\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"self\",\r",
									"        \"collection\",\r",
									"        \"about\",\r",
									"        \"wp:post_type\",\r",
									"        \"curies\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"id\",\r",
									"    \"count\",\r",
									"    \"description\",\r",
									"    \"link\",\r",
									"    \"name\",\r",
									"    \"slug\",\r",
									"    \"taxonomy\",\r",
									"    \"parent\",\r",
									"    \"meta\",\r",
									"    \"_links\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"var jsonrepo=pm.response.json();\r",
									"\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.expect(tv4.validate(jsonrepo, schema)).to.be.true;\r",
									"    \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "REST API",
									"type": "text",
									"disabled": true
								},
								{
									"key": "slug",
									"value": "API related Documents",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/categories/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"categories",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "WordpressPage",
			"item": [
				{
					"name": "ReadAllpages",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/pages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"pages"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckcaseSensitivity",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/pages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"pages"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckforNonexistingpage",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/pages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"pages"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckStatuscodeofPage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/pages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"pages"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckResponsetime",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/pages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"pages"
							]
						}
					},
					"response": []
				},
				{
					"name": "ChecSuccessfulPost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/pages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"pages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate_id_of_pages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/pages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"pages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Correlation_of_pages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=pm.response.json();\r",
									"pm.test(\"check for id\",function(){\r",
									"    var jsonData=pm.response.json();//deserialisation or parsing\r",
									"    console.log(+jsonData.id);\r",
									"\r",
									"pm.globals.set(\"PageId\",jsonData.id);\r",
									"console.log(pm.globals.get(\"PageId\"));\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/pages/41",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"pages",
								"41"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreatePage",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "My Wordpress",
									"type": "text"
								},
								{
									"key": "content",
									"value": "New wordpress document",
									"type": "text"
								},
								{
									"key": "status",
									"value": "publish",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HostName1}}",
							"host": [
								"{{HostName1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ReadSinglePage",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{HostName1}}/30",
							"host": [
								"{{HostName1}}"
							],
							"path": [
								"30"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdatePage",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "My Pages Updated",
									"type": "text"
								},
								{
									"key": "content",
									"value": "New Pages updated",
									"type": "text"
								},
								{
									"key": "status",
									"value": "publish",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HostName1}}/30",
							"host": [
								"{{HostName1}}"
							],
							"path": [
								"30"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeletePage",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "My Pages Updated",
									"type": "text",
									"disabled": true
								},
								{
									"key": "content",
									"value": "New Pages updated",
									"type": "text",
									"disabled": true
								},
								{
									"key": "status",
									"value": "publish",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{HostName1}}/35",
							"host": [
								"{{HostName1}}"
							],
							"path": [
								"35"
							]
						}
					},
					"response": []
				},
				{
					"name": "SchemaValidationofPage",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "My Pages Updated",
									"type": "text"
								},
								{
									"key": "content",
									"value": "New Pages updated",
									"type": "text"
								},
								{
									"key": "status",
									"value": "publish",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HostName1}}/30",
							"host": [
								"{{HostName1}}"
							],
							"path": [
								"30"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "WordpressMedia",
			"item": [
				{
					"name": "ReadAllmedia",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/media",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"media"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate_id_media",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Positive validation of id\r",
									"pm.test(\"Id is matched\",function(){\r",
									"    var jsonrep=pm.response.json();\r",
									"    pm.expect(jsonrep.id).to.eql(44);\r",
									"});\r",
									"\r",
									"var Ajv=require('ajv'),\r",
									"    ajv=new Ajv({logger:console});\r",
									"\r",
									"//Negetive validation of id\r",
									"pm.test(\"Id is not matched\",function(){\r",
									"    var jsonrep=pm.response.json();\r",
									"    pm.expect(jsonrep.id).to.eql(49);\r",
									"});\r",
									"\r",
									"var Ajv=require('ajv'),\r",
									"    ajv=new Ajv({logger:console});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/media/44",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"media",
								"44"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckforNonexistingMedia",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/media/ABC",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"media",
								"ABC"
							]
						}
					},
					"response": []
				},
				{
					"name": "ReadSingleMedia",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/media/44",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"media",
								"44"
							]
						}
					},
					"response": []
				},
				{
					"name": "SchemaValidationofMedia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"id\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"date\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"date_gmt\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"guid\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"rendered\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"rendered\"\r",
									"      ]\r",
									"    },\r",
									"    \"modified\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"modified_gmt\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"slug\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"status\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"type\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"link\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"title\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"rendered\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"rendered\"\r",
									"      ]\r",
									"    },\r",
									"    \"author\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"comment_status\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"ping_status\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"template\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"meta\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": {}\r",
									"    },\r",
									"    \"description\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"rendered\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"rendered\"\r",
									"      ]\r",
									"    },\r",
									"    \"caption\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"rendered\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"rendered\"\r",
									"      ]\r",
									"    },\r",
									"    \"alt_text\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"media_type\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"mime_type\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"media_details\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"width\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"height\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"file\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"sizes\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"medium\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"file\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"width\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"height\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"mime_type\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"source_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"file\",\r",
									"                \"width\",\r",
									"                \"height\",\r",
									"                \"mime_type\",\r",
									"                \"source_url\"\r",
									"              ]\r",
									"            },\r",
									"            \"thumbnail\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"file\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"width\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"height\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"mime_type\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"source_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"file\",\r",
									"                \"width\",\r",
									"                \"height\",\r",
									"                \"mime_type\",\r",
									"                \"source_url\"\r",
									"              ]\r",
									"            },\r",
									"            \"full\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"file\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"width\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"height\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"mime_type\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"source_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"file\",\r",
									"                \"width\",\r",
									"                \"height\",\r",
									"                \"mime_type\",\r",
									"                \"source_url\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"medium\",\r",
									"            \"thumbnail\",\r",
									"            \"full\"\r",
									"          ]\r",
									"        },\r",
									"        \"image_meta\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"aperture\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"credit\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"camera\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"caption\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"created_timestamp\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"copyright\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"focal_length\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"iso\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"shutter_speed\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"title\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"orientation\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"keywords\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": {}\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"aperture\",\r",
									"            \"credit\",\r",
									"            \"camera\",\r",
									"            \"caption\",\r",
									"            \"created_timestamp\",\r",
									"            \"copyright\",\r",
									"            \"focal_length\",\r",
									"            \"iso\",\r",
									"            \"shutter_speed\",\r",
									"            \"title\",\r",
									"            \"orientation\",\r",
									"            \"keywords\"\r",
									"          ]\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"width\",\r",
									"        \"height\",\r",
									"        \"file\",\r",
									"        \"sizes\",\r",
									"        \"image_meta\"\r",
									"      ]\r",
									"    },\r",
									"    \"post\": {\r",
									"      \"type\": \"null\"\r",
									"    },\r",
									"    \"source_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"_links\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"self\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"collection\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"about\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"author\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"embeddable\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"embeddable\",\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"replies\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"embeddable\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"embeddable\",\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"self\",\r",
									"        \"collection\",\r",
									"        \"about\",\r",
									"        \"author\",\r",
									"        \"replies\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"id\",\r",
									"    \"date\",\r",
									"    \"date_gmt\",\r",
									"    \"guid\",\r",
									"    \"modified\",\r",
									"    \"modified_gmt\",\r",
									"    \"slug\",\r",
									"    \"status\",\r",
									"    \"type\",\r",
									"    \"link\",\r",
									"    \"title\",\r",
									"    \"author\",\r",
									"    \"comment_status\",\r",
									"    \"ping_status\",\r",
									"    \"template\",\r",
									"    \"meta\",\r",
									"    \"description\",\r",
									"    \"caption\",\r",
									"    \"alt_text\",\r",
									"    \"media_type\",\r",
									"    \"mime_type\",\r",
									"    \"media_details\",\r",
									"    \"post\",\r",
									"    \"source_url\",\r",
									"    \"_links\"\r",
									"  ]\r",
									"};\r",
									"var jsonrep=pm.response.json();\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.expect(tv4.validate(jsonrep, schema)).to.be.true;\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/media/44",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"media",
								"44"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authorization",
			"item": [
				{
					"name": "Without_Authorization",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/themes/twentytwentyone",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"themes",
								"twentytwentyone"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid_username",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "sanchari",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/themes/twentytwentyone",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"themes",
								"twentytwentyone"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid_password",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "12344",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/themes/twentytwentyone",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"themes",
								"twentytwentyone"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Practice",
			"item": [
				{
					"name": "validatedid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"check for id\",function(){\r",
									"    var jsonrep=pm.response.json();\r",
									"    pm.expect(jsonrep.id).to.eql(13);\r",
									"});\r",
									"\r",
									"var Ajv=require('ajv'),\r",
									"    ajv=new Ajv({logger:console});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/posts/13",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"posts",
								"13"
							]
						}
					},
					"response": []
				},
				{
					"name": "validatedid Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=pm.response.json();\r",
									"pm.test(\"check id\",function(){\r",
									"    var jsonData=pm.response.json();//deserialisation or parsing\r",
									"    console.log(jsonData.id);\r",
									"\r",
									"pm.globals.set(\"globalid\",jsonData.id);\r",
									"console.log(pm.globals.get(\"globalid\"));\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/posts/13",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"posts",
								"13"
							]
						}
					},
					"response": []
				},
				{
					"name": "openpost Copy 4",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "author_name",
									"value": "sanchari",
									"type": "text"
								},
								{
									"key": "post",
									"value": "13",
									"type": "text"
								},
								{
									"key": "content",
									"value": "It is my content",
									"type": "text"
								},
								{
									"key": "email",
									"value": "sahasanchari57@gmail.com",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "schema  validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"id\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"date\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"date_gmt\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"guid\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"rendered\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"raw\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"rendered\",\r",
									"        \"raw\"\r",
									"      ]\r",
									"    },\r",
									"    \"modified\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"modified_gmt\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"password\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"slug\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"status\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"type\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"link\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"title\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"raw\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"rendered\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"raw\",\r",
									"        \"rendered\"\r",
									"      ]\r",
									"    },\r",
									"    \"content\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"raw\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"rendered\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"protected\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"block_version\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"raw\",\r",
									"        \"rendered\",\r",
									"        \"protected\",\r",
									"        \"block_version\"\r",
									"      ]\r",
									"    },\r",
									"    \"excerpt\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"raw\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"rendered\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"protected\": {\r",
									"          \"type\": \"boolean\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"raw\",\r",
									"        \"rendered\",\r",
									"        \"protected\"\r",
									"      ]\r",
									"    },\r",
									"    \"author\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"featured_media\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"comment_status\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"ping_status\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"sticky\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"template\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"format\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"meta\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": {}\r",
									"    },\r",
									"    \"categories\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"tags\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": {}\r",
									"    },\r",
									"    \"permalink_template\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"generated_slug\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"_links\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"self\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"collection\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"about\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"author\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"embeddable\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"embeddable\",\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"replies\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"embeddable\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"embeddable\",\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"version-history\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"count\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"count\",\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"predecessor-version\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"id\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"id\",\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"wp:attachment\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"wp:term\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"taxonomy\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"embeddable\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"taxonomy\",\r",
									"                \"embeddable\",\r",
									"                \"href\"\r",
									"              ]\r",
									"            },\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"taxonomy\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"embeddable\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"taxonomy\",\r",
									"                \"embeddable\",\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"wp:action-publish\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"wp:action-unfiltered-html\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"wp:action-sticky\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"wp:action-assign-author\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"wp:action-create-categories\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"wp:action-assign-categories\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"wp:action-create-tags\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"wp:action-assign-tags\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"curies\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"name\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"templated\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"name\",\r",
									"                \"href\",\r",
									"                \"templated\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"self\",\r",
									"        \"collection\",\r",
									"        \"about\",\r",
									"        \"author\",\r",
									"        \"replies\",\r",
									"        \"version-history\",\r",
									"        \"predecessor-version\",\r",
									"        \"wp:attachment\",\r",
									"        \"wp:term\",\r",
									"        \"wp:action-publish\",\r",
									"        \"wp:action-unfiltered-html\",\r",
									"        \"wp:action-sticky\",\r",
									"        \"wp:action-assign-author\",\r",
									"        \"wp:action-create-categories\",\r",
									"        \"wp:action-assign-categories\",\r",
									"        \"wp:action-create-tags\",\r",
									"        \"wp:action-assign-tags\",\r",
									"        \"curies\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"id\",\r",
									"    \"date\",\r",
									"    \"date_gmt\",\r",
									"    \"guid\",\r",
									"    \"modified\",\r",
									"    \"modified_gmt\",\r",
									"    \"password\",\r",
									"    \"slug\",\r",
									"    \"status\",\r",
									"    \"type\",\r",
									"    \"link\",\r",
									"    \"title\",\r",
									"    \"content\",\r",
									"    \"excerpt\",\r",
									"    \"author\",\r",
									"    \"featured_media\",\r",
									"    \"comment_status\",\r",
									"    \"ping_status\",\r",
									"    \"sticky\",\r",
									"    \"template\",\r",
									"    \"format\",\r",
									"    \"meta\",\r",
									"    \"categories\",\r",
									"    \"tags\",\r",
									"    \"permalink_template\",\r",
									"    \"generated_slug\",\r",
									"    \"_links\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"\r",
									"var jsonrep = pm.response.json();\r",
									"\r",
									"pm.test('validate Schema of post', function () {\r",
									"    pm.expect(tv4.validate(jsonrep, schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/posts/17",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"posts",
								"17"
							]
						}
					},
					"response": []
				},
				{
					"name": "openpost Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.value).to.eql(100);\r",
									"});\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"1\",\r\n    \"firstname\":\"sanchari\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/posts/15",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"posts",
								"15"
							]
						}
					},
					"response": []
				},
				{
					"name": "openpost Copy 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.value).to.eql(100);\r",
									"});\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"1\",\r\n    \"firstname\":\"sanchari\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/blocks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"blocks"
							]
						}
					},
					"response": []
				},
				{
					"name": "openpost Copy 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.value).to.eql(100);\r",
									"});\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"1\",\r\n    \"firstname\":\"sanchari\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/posts/15",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"posts",
								"15"
							]
						}
					},
					"response": []
				},
				{
					"name": "openpost Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.value).to.eql(100);\r",
									"});\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "My picture",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/media?item=44",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"media"
							],
							"query": [
								{
									"key": "item",
									"value": "44"
								},
								{
									"key": "title",
									"value": "my picture",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createNewpost",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "New post created by Postman",
									"type": "text"
								},
								{
									"key": "content",
									"value": "This is my sample content",
									"type": "text"
								},
								{
									"key": "status",
									"value": "publish",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/posts",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_post",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "New post created by Postman updated",
									"type": "text"
								},
								{
									"key": "content",
									"value": "This is my sample content updated",
									"type": "text"
								},
								{
									"key": "status",
									"value": "publish",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/posts/13",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"posts",
								"13"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_post",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "New post created by Postman updated",
									"type": "text",
									"disabled": true
								},
								{
									"key": "content",
									"value": "This is my sample content updated",
									"type": "text",
									"disabled": true
								},
								{
									"key": "status",
									"value": "publish",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/posts/15",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"posts",
								"15"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "Lists",
			"value": "posts"
		}
	]
}